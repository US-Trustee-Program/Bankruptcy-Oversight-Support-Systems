@use 'uswds-core' with (
  $theme-font-path: '/assets/fonts',
  $theme-image-path: '/assets/styles/img'
);
@use 'uswds';
@use 'styles/abstracts/colors';
@use 'styles/abstracts/tables';

/* Overriding USWDS Grid row large gap negative margins because they force
   the screen width overall to overflow and create scrollbars where there
   should not be any.
*/
.grid-row.grid-gap-lg {
  margin-left: 0;
  margin-right: 0;
}

body {
  overflow-y: auto;
  overflow-x: hidden; // Prevent horizontal scrolling globally
}
#root {
  min-width: 0; // Allow root to shrink instead of forcing content width
  width: 100%;
  max-width: 100vw; // Never exceed viewport width
}
.App {
  display: flex;
  flex-direction: column;
  position: relative;
  padding: 0;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  scroll-behavior: smooth;
  height: auto;
  min-height: 100vh;

  /* For content we only want screen readers to see --
     Purpose:
        * If we use display:off, hidden, or aria-hidden, the screen reader will completely ignore it
          like it's not there at all.
        * We don't want the content to be visible.
        * We need to hide it in this hackish way so that it's not visible, but the screen readers will read it.
    Use this class anywhere you need screen readers to get more context, such as with aria-describedby sections.
  */
  .screen-reader-only {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    white-space: nowrap;
    border: 0;
  }

  .cams-content {
    flex: 1;
    padding: 0 0 50px 0;
    margin: 0 auto;
    width: min(83.3333333333333%, 82rem); // Use min() for better responsive behavior
    max-width: calc(100vw - 2rem); // Ensure we never exceed viewport minus padding
    box-sizing: border-box;

    h1,
    h2 {
      text-align: left;
    }

    table {
      width: 100%;
      td {
        vertical-align: top;
        .mobile-title {
          visibility: hidden;
          display: inherit;
          width: 0;
          height: 0;
          padding: 0;
          margin: 0;
          white-space: nowrap;
          z-index: 5;
          position: absolute;
        }
      }
    }
  }

  .privacy-footer {
    display: block;
    position: relative;
    top: auto;
    bottom: auto;
    right: 0;
    left: 0;
    line-height: 1rem;
    align-items: center;
    padding: 5px 100px;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    > div {
      display: flex;
      justify-content: center;
    }
  }

  .App-logo {
    height: 40vmin;
    pointer-events: none;
  }

  .App-header {
    background-color: colors.$eagle;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: calc(10px + 2vmin);
    color: white;
  }

  .App-link {
    color: #61dafb;
  }

  #assign-attorney-modal-overlay.usa-modal-overlay {
    overflow-y: scroll;
  }
}

.float-right {
  display: flex;
  justify-content: right;
}

@media screen and (max-width: 800px) {
  .App {
    .body {
      padding: 50px 0;

      table {
        display: block;

        thead,
        tbody,
        th,
        td,
        tr {
          display: block;
        }

        // Hide table headers (but not display: none;, for accessibility)
        thead tr {
          position: absolute;
          top: -9999px;
          left: -9999px;
        }

        tr {
          border: tables.$tableBorder;

          td {
            // Behave  like a "row"
            border: none;
            position: relative;
            .mobile-title {
              display: inline-block;
              font-weight: 700;
              visibility: visible;
              width: auto;
              height: auto;
              white-space: normal;
              padding-right: 10px;
              z-index: 1;
              position: relative;
            }
          }
        }
      }
    }
  }
}
