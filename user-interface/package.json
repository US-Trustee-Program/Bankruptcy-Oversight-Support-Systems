{
  "name": "cams",
  "version": "0.1.0",
  "private": true,
  "license": "CC0 v1.0",
  "description": "Bankruptcy Oversight Support System - Graphical Frontend User Interface",
  "dependencies": {
    "@cams/common": "file:../common/dist",
    "@microsoft/applicationinsights-react-js": "^18.3.6",
    "@microsoft/applicationinsights-web": "^3.3.9",
    "@okta/okta-auth-js": "^7.12.1",
    "@okta/okta-react": "^6.10.0",
    "@tiptap/extension-bold": "^3.0.7",
    "@tiptap/extension-document": "^3.0.7",
    "@tiptap/extension-italic": "^3.0.7",
    "@tiptap/extension-list": "^3.0.7",
    "@tiptap/extension-paragraph": "^3.0.7",
    "@tiptap/extension-text": "^3.0.7",
    "@tiptap/extension-underline": "^3.0.7",
    "@tiptap/extensions": "^3.0.7",
    "@tiptap/react": "^3.0.7",
    "@types/jsdom": "^21.1.7",
    "@types/node": "^24.1.0",
    "@types/react": "^18.3.23",
    "@types/react-dom": "^18.3.7",
    "@uswds/uswds": "^3.13.0",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.0",
    "launchdarkly-react-client-sdk": "^3.8.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.30.1"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@eslint/js": "^9.17.0",
    "@faker-js/faker": "^9.9.0",
    "@playwright/test": "^1.54.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^29.5.14",
    "@vitejs/plugin-react": "^4.7.0",
    "@vitest/coverage-v8": "^3.2.4",
    "c8": "^10.1.3",
    "dependency-cruiser": "^16.10.4",
    "eslint": "^9.31.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.3",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-testing-library": "^7.6.1",
    "jsdom": "^26.1.0",
    "pa11y-ci": "^3.1.0",
    "prettier": "^3.6.2",
    "sass-embedded": "^1.89.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.38.0",
    "vite": "^7.0.6",
    "vite-plugin-env-compatible": "^2.0.1",
    "vite-plugin-static-copy": "^3.1.1",
    "vite-plugin-svgr": "^4.3.0",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.0.7"
  },
  "eslintConfig": {
    "extends": []
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "overrides": {
    "semver": ">7.5.1 <8.x.x",
    "@babel/runtime": ">=7.26.10 <8.x.x"
  },
  "scripts": {
    "clean": "rm -rf build && rm -rf node_modules && rm -rf ./coverage",
    "start": "npm run envToConfig && vite",
    "start:a11y": "export CAMS_USE_FAKE_API=true && export CAMS_LOGIN_PROVIDER=none && npm run envToConfig && tsc -b && vite build && vite preview --port 3000",
    "build": "npm run envToConfig && tsc -b && vite build",
    "build-common": "pushd ../common && npm ci && npm run build && popd",
    "serve": "npm run envToConfig && npm run build && vite preview --port 3000",
    "test": "export CAMS_USE_FAKE_API=true && vitest run",
    "test:watch": "export CAMS_USE_FAKE_API=true && vitest watch",
    "test:a11y:ui": "playwright test --ui",
    "test:a11y": "playwright test --reporter=list,html",
    "test:a11y:clean": "rm -rf test-results & rm -rf playwright-report",
    "coverage": "export CAMS_USE_FAKE_API=true && vitest run --coverage",
    "coverage:ci": "npm config set script-shell=/bin/bash && npm run build-common && npm config set script-shell= && export CAMS_USE_FAKE_API=true && vitest run --coverage",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write './**/*.{js,jsx,ts,tsx,css,md,json}' --config ./.prettierrc",
    "pa11y-ci": "pa11y-ci",
    "dependency-cruiser-graphical": "current_time=$(date +'%Y-%m-%d_%H%M') && npx depcruise --output-type dot --do-not-follow '^node_modules($|/)' public src | dot -T svg > ../docs/architecture/dependency-cruiser/user-interface/dependency-graph_${current_time}.svg",
    "dependency-cruiser:ci": "npx depcruise --output-type err-long public src",
    "envToConfig": "node ./envToConfig.js",
    "stagingConfig": "node ./envToConfig.js -f configuration-staging.json"
  }
}
