# Use the latest GitHub Actions runner Ubuntu image
FROM ghcr.io/actions/actions-runner:latest

# Build argument for Azure CLI version (defaults to latest if not specified)
ARG AZURE_CLI_VERSION=""

# Switch to root to perform installation tasks
USER root

# Remove existing Azure CLI installation
RUN rm -rf /opt/az /usr/lib/azure-cli ~/.azure /usr/local/bin/az 2>/dev/null || true && \
    # Remove any az symlinks
    find /usr/local/bin /usr/bin -name "az" -type l -delete 2>/dev/null || true && \
    # Clean up any existing azure-cli apt package if it exists
    (apt-get update && apt-get remove -y azure-cli 2>/dev/null || true) && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*

# Dependencies are already present from existing Azure CLI installation

# Add Microsoft's GPG key and repository
RUN mkdir -p /etc/apt/keyrings && \
    curl -sLS https://packages.microsoft.com/keys/microsoft.asc | \
    gpg --dearmor > /etc/apt/keyrings/microsoft.gpg && \
    chmod go+r /etc/apt/keyrings/microsoft.gpg

RUN echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" | \
    tee /etc/apt/sources.list.d/azure-cli.list

# Install Azure CLI - either specific version or latest
RUN apt-get update && \
    if [ -n "$AZURE_CLI_VERSION" ]; then \
        echo "Installing Azure CLI version $AZURE_CLI_VERSION" && \
        apt-get install -y azure-cli=${AZURE_CLI_VERSION}-1~$(lsb_release -cs); \
    else \
        echo "Installing latest Azure CLI version" && \
        apt-get install -y azure-cli; \
    fi && \
    rm -rf /var/lib/apt/lists/*

# Hold the azure-cli package to prevent automatic updates
RUN apt-mark hold azure-cli

# Verify installation
RUN az version

# Switch back to the runner user
USER runner

# Set working directory
WORKDIR /home/runner
