name: Continuous Deployment

on: [push]

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # v2 minimum required
      - uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--skip-sorting-imports --replace"

  build-frontend:
    defaults:
      run:
        working-directory: gui

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: gui/package-lock.json

      - run: npm ci
      - run: |
          export REACT_APP_SERVER_HOSTNAME=${{ vars.REACT_APP_SERVER_HOSTNAME }}
          export REACT_APP_SERVER_PORT=${{ vars.REACT_APP_SERVER_PORT }}
          export REACT_APP_SERVER_PROTOCOL=${{ vars.REACT_APP_SERVER_PROTOCOL }}
          export REACT_APP_BASE_PATH=${{ vars.REACT_APP_BASE_PATH }}
          npm run build --if-present
      - run: CI=true npm test

      - name: Archive the frontend build directory
        id: archive
        run: |
          mkdir artifacts
          tar -cvf artifacts/ustp-cams.tar ./build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ustp-cams
          path: gui/artifacts/
          if-no-files-found: error

  build-service:
    defaults:
      run:
        working-directory: functions/java

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: ./gradlew azureFunctionsPackageZip

      - name: Upload Java Azure Functions Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ustp-cams-java-function
          path: functions/java/build/azure-functions/ustp-cams-java-function.zip
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-service]
    if: ((github.ref == 'refs/heads/main') || true) # TODO temporary to kick off deploy on a branch update
    outputs:
      functionAppId: ${{ steps.azure-deploy.outputs.functionAppId }}
      functionAppName: ${{ steps.azure-deploy.outputs.functionAppName }}
      webappId: ${{ steps.azure-deploy.outputs.webappId }}
      webappName: ${{ steps.azure-deploy.outputs.webappName }}
    steps:
      - run: echo "Current git reference ${{ github.ref_name }}"

      - uses: actions/checkout@main

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Azure resources
        id: azure-deploy
        run: |
          ./ops/script/azure-deploy.sh \
            --show-what-if \
            --resourceGroup ${{ secrets.AZ_APP_RG }} \
            --file ./ops/bicep/ustp-cams.bicep \
            --parameters 'appName=${{ secrets.APP_NAME }}${{ secrets.DEV_SUFFIX }} deployVnet=false deployNetwork=true networkResourceGroupName=${{ secrets.AZ_NETWORK_RG }} virtualNetworkName=${{ secrets.APP_NAME }}${{ secrets.DEV_SUFFIX }}-vnet linkVnetIds=[] deployWebapp=true webappResourceGroupName=${{ secrets.AZ_APP_RG }} deployBackendFunctions=true backendFunctionsResourceGroupName=${{ secrets.AZ_APP_RG }} databaseConnectionString=${{ secrets.AZ_SQL_CONN_STR }} sqlServerName=${{ secrets.AZ_SQL_SERVER_NAME }} sqlServerResourceGroupName=${{ secrets.AZURE_RG }}'

          ./ops/script/json-to-actions-output.sh ./outputs.json
  deploy-webapp:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ustp-cams

      - name: Unarchive the build
        run: |
          tar -xf ustp-cams.tar

      - name: Deploy to Azure WebApp
        run: |
          cd build
          az resource update -g ${{ secrets.AZ_APP_RG }} -n ${{ needs.deploy.outputs.webappName }} --resource-type "Microsoft.Web/sites" --set properties.publicNetworkAccess=Enabled
          az webapp up --html -n ${{ needs.deploy.outputs.webappName }}
          az resource update -g ${{ secrets.AZ_APP_RG }} -n ${{ needs.deploy.outputs.webappName }} --resource-type "Microsoft.Web/sites" --set properties.publicNetworkAccess=Disabled

  deploy-service:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ustp-cams-java-function

      - name: Deploy Azure Functions backend
        run: |
          az resource update --ids ${{ needs.deploy.outputs.functionAppId }} --set properties.publicNetworkAccess=Enabled
          az functionapp deployment source config-zip \
            -g ${{ secrets.AZ_APP_RG }} \
            -n ${{ needs.deploy.outputs.functionAppName }} \
            --src ./ustp-cams-java-function.zip
          az resource update --ids ${{ needs.deploy.outputs.functionAppId }} --set properties.publicNetworkAccess=Disabled
