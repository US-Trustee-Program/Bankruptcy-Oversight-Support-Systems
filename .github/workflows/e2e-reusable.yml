on:
  workflow_call:
    inputs:
      apiName:
        required: true
        type: string
      slotName:
        required: true
        type: string
      webappName:
        required: true
        type: string
      stackName:
        required: true
        type: string
      azResourceGrpAppEncrypted:
        required: true
        type: string
      azureEnvironment:
        required: true
        type: string
      azureHostnameSuffix:
        default: '.us'
        required: false
        type: string
jobs:
  seed-data:
    runs-on: ubuntu-latest
    steps:
    - name: Seed e2e database
      run: |
        curl -v -d '{"txIdOverride": '0'}' -H "Content-Type: application/json" https://${{ inputs.apiName }}.azurewebsites${{ inputs.AZ_HOSTNAME_SUFFIX }}/api/orders-sync?x-ms-routing-name=${{ inputs.slotName }}

  playwright-e2e-test:
    env:
      webappName: ${{ inputs.webappName }}
      stackName: ${{ inputs.stackName }}
      priority: 201
    defaults:
      run:
        working-directory: test/e2e
    runs-on: ubuntu-latest
    steps:
      - name: Get source code
        uses: actions/checkout@v3

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ inputs.azureEnvironment }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Enable GHA runner access
        run: |
          ../../ops/scripts/pipeline/dev-add-allowed-ip.sh \
          -g ${{ steps.rgApp.outputs.out }} \
          -s ${{ env.stackName }} \
          -p ${{ env.priority }} \
          --is-cicd

      - name: Install Node dependencies
        run: |
          npm ci
          npx playwright install chromium msedge

      - name: Run the test
        run: |
          TARGET_HOST=https://${{ env.webappName }}.azurewebsites${{ inputs.azureHostnameSuffix }} npx playwright test --reporter=list,html

      - name: Upload report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: test/e2e/playwright-report/
          retention-days: 30

      - name: Disable GHA runner access
        if: always()
        run: |
          name="gha-${{ env.priority }}-${{ env.stackName }}"
          ops/scripts/pipeline/dev-rm-allowed-ip.sh ${{ steps.rgApp.outputs.out }} ${{ env.stackName }} ${name:0:32}
