name: Clean up Flexion Azure Resources

on:
  workflow_dispatch:
    inputs:
      hashId:
        description: "Hash id of target branch deployemnt"
        default: ''
        type: string

jobs:
  list:
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - name: List existing branch deployments
        run: |
          echo "List Azure resource groups of current branch deployment"
          az group list --query "[?tags.branchName].{ Name:name Branch:tags.branchName HashId:tags.branchHashId }" -o table

  check:
    runs-on: ubuntu-latest
    if: inputs.hashId != ''
    outputs:
      executeCleanup: ${{ steps.check.outputs.executeCleanup }}
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - name: Validate resources
        id: check
        run: |
          echo "Does resources with ${{ inputs.hashId }} exist?"
          count=$(az group list --query "length([?id.contains(@,'${{ inputs.hashId }}')])")
          if [[ $count -eq 2 ]]; then
            echo 'Expected resources found.'
            echo "executeCleanup=true" >> $GITHUB_OUTPUT
          else
            echo 'Did not find existing Azure resources with matching hash id.'
            echo "executeCleanup=false" >> $GITHUB_OUTPUT
          fi

  clean-up:
    runs-on: ubuntu-latest
    needs: [check]
    if: needs.check.outputs.executeCleanup == 'true'
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - uses: actions/checkout@v3
      - run: ./ops/scripts/utility/az-delete-branch-resources.sh ${{ inputs.hashId }} false
