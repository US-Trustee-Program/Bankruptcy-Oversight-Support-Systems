name: Deploy code for slot

on:
  workflow_call:
    inputs:
      ghaEnvironment:
        required: true
        type: string
      environmentHash:
        required: true
        type: string
      stackName:
        required: true
        type: string
      webappName:
        required: true
        type: string
      apiName:
        required: true
        type: string
      azResourceGrpAppEncrypted:
        required: true
        type: string
      cosmosDbClientId:
        required: true
        type: string
      cosmosDbPrincipalId:
        required: true
        type: string
      slotName:
        required: true
        type: string
      e2eCosmosDbExists:
        required: true
        type: boolean
      initialDeployment:
        required: true
        type: string
jobs:
  deploy-webapp-slot:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@main

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.webappName }}-build

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Deploy to Azure WebApp Slot
        id: deploy-webapp-slot-step
        continue-on-error: true
        run: |
          ./ops/scripts/pipeline/slots/az-app-slot-deploy.sh \
          --src ./${{ inputs.webappName }}.zip \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.webappName }} \
          --slotName ${{ inputs.slotName }}

      - name: Retry Deploy to Azure WebApp slot
        if: steps.deploy-webapp-slot-step.outcome != 'success'
        run: |
          sleep 30 &&
          ./ops/scripts/pipeline/slots/az-app-slot-deploy.sh \
          --src ./${{ inputs.webappName }}.zip \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.webappName }} \
          --slotName ${{ inputs.slotName }}

  deploy-service-slot:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@main

      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.apiName }}-build

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Deploy Azure Functions slot backend
        id: deploy-backend-slot-step
        continue-on-error: true
        run: |
          ./ops/scripts/pipeline/slots/az-func-slot-deploy.sh \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.apiName }} \
          --src ./${{ inputs.apiName }}.zip \
          --slotName ${{ inputs.slotName }} \
          --settings "INFO_SHA=${{ github.sha }}"

      - name: Deploy Azure Functions slot backend
        id: deploy-backend-slot-retry
        if: steps.deploy-backend-slot-step.outcome != 'success'
        run: |
          ./ops/scripts/pipeline/slots/az-func-slot-deploy.sh \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.apiName }} \
          --src ./${{ inputs.apiName }}.zip \
          --slotName ${{ inputs.slotName }} \
          --settings "INFO_SHA=${{ github.sha }}"

  endpoint-test-application-slot:
    needs: [deploy-webapp-slot, deploy-service-slot]
    uses: ./.github/workflows/reusable-endpoint-test.yml
    with:
      stackName: ${{ inputs.stackName }}
      webappName: ${{ inputs.webappName }}
      apiName: ${{ inputs.apiName }}
      branchHashId: ${{ inputs.environmentHash }}
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      slotName: ${{ inputs.slotName }}
    secrets: inherit # pragma: allowlist secret

  execute-e2e-test:
    needs:
      [deploy-webapp-slot, deploy-service-slot, endpoint-test-application-slot]
    uses: ./.github/workflows/reusable-e2e.yml
    with:
      apiName: ${{ inputs.apiName }}
      slotName: ${{ inputs.slotName }}
      webappName: ${{ inputs.webappName }}
      stackName: ${{ inputs.stackName }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      branchHashId: ${{ inputs.environmentHash }}
      e2eCosmosDbExists: ${{ inputs.e2eCosmosDbExists }}
    secrets: inherit # pragma: allowlist secret

  swap-webapp-deployment-slot:
    runs-on: ubuntu-latest
    needs: [deploy-webapp-slot, deploy-service-slot, execute-e2e-test]
    environment: ${{ inputs.ghaEnvironment }}
    if: (always() && contains(needs.execute-e2e-test.result, 'failure') || contains(needs.execute-e2e-test.result, 'success')) && (inputs.initialDeployment != 'true')
    env:
      webappName: ${{ inputs.webappName }}
      slotName: ${{ inputs.slotName }}
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}
      - name: Swap Deployment Slot
        run: |
          az webapp deployment slot swap --slot ${{ env.slotName }} --name ${{ env.webappName }} -g ${{ steps.rgApp.outputs.out }}
          az webapp traffic-routing clear --name ${{ env.webappName }} -g ${{ steps.rgApp.outputs.out }}
      - name: Deny traffic
        run: |
          az webapp config access-restriction remove --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.webappName }} --slot ${{ env.slotName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0

  swap-nodeapi-deployment-slot:
    runs-on: ubuntu-latest
    needs: [deploy-webapp-slot, deploy-service-slot, execute-e2e-test]
    environment: ${{ inputs.ghaEnvironment }}
    if: (always() && contains(needs.execute-e2e-test.result, 'failure') || contains(needs.execute-e2e-test.result, 'success')) && (inputs.initialDeployment != 'true')
    env:
      apiName: ${{ inputs.apiName }}
      slotName: ${{ inputs.slotName }}
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}
      - name: Swap Deployment Slot
        run: |
          az functionapp deployment slot swap --slot ${{ env.slotName }} --name ${{ env.apiName }} -g ${{ steps.rgApp.outputs.out }}
          az webapp traffic-routing clear --name ${{ env.apiName }} -g ${{ steps.rgApp.outputs.out }}
      - name: Deny traffic
        run: |
          az functionapp config access-restriction remove --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.apiName }} --slot ${{ env.slotName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0

  endpoint-test-application-post-swap:
    needs: [swap-nodeapi-deployment-slot, swap-webapp-deployment-slot]
    uses: ./.github/workflows/reusable-endpoint-test.yml
    with:
      stackName: ${{ inputs.stackName }}
      webappName: ${{ inputs.webappName }}
      apiName: ${{ inputs.apiName }}
      branchHashId: ${{ inputs.environmentHash }}
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      slotName: "self"
    secrets: inherit # pragma: allowlist secret
