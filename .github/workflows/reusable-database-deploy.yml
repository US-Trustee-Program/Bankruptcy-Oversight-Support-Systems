name: Azure Deployment - CosmosDB

on:
  workflow_call:
    inputs:
      ghaEnvironment:
        required: true
        type: string
      azResourceGrpNetworkEncrypted:
        required: true
        type: string
      apiFunctionName:
        required: true
        type: string
      dataflowsFunctionName:
        required: true
        type: string
      environmentHash:
        required: true
        type: string

jobs:
  deploy-db:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@main

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgNetwork
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpNetworkEncrypted }}
      - name: Generate E2E name
        id: generateE2eName
        run: |
          e2eDatabaseName="${{ secrets.AZ_COSMOS_DATABASE_NAME }}-e2e"
          if [[ ${{ inputs.ghaEnvironment }} != "Main-Gov" ]]; then
            echo "Adding suffix to database name"
            e2eDatabaseName="${e2eDatabaseName}-${{ inputs.environmentHash }}"
          fi
          echo "e2eDatabaseName=${e2eDatabaseName}" >> $GITHUB_OUTPUT

      - name: Deploy Cosmos MongoDB
        id: azure-mongodb-deploy
        run: |
          allowedNetworks=$(az network vnet subnet list -g ${{ steps.rgNetwork.outputs.out }} --vnet-name ${{ vars.AZ_NETWORK_VNET_NAME }} --query "[?name=='snet-${{ inputs.apiFunctionName }}' || name=='snet-${{inputs.dataflowsFunctionName}}'].id" -o json)

          ./ops/scripts/pipeline/az-cosmos-deploy.sh \
            -g ${{ secrets.AZURE_RG }} \
            --accountName ${{ secrets.AZ_COSMOS_MONGO_ACCOUNT_NAME }} \
            --databaseName ${{ secrets.AZ_COSMOS_DATABASE_NAME }} \
            --environmentName ${{ inputs.ghaEnvironment }} \
            --allowedNetworks "${allowedNetworks}" \
            --analyticsWorkspaceId ${{ secrets.AZ_ANALYTICS_WORKSPACE_ID }} \
            --actionGroupResourceGroup ${{ secrets.AZ_ANALYTICS_RG }} \
            --actionGroupName ${{ secrets.AZ_ACTION_GROUP_NAME }} \
            --keyVaultName ${{ secrets.AZ_KV_APP_CONFIG_NAME }} \
            --kvResourceGroup ${{ secrets.AZ_KV_APP_CONFIG_RG_NAME }} \
            --branchHashId ${{ inputs.environmentHash || 'DOES_NOT_EXIST' }}
