name: Deploy code

on:
  workflow_call:
    inputs:
      ghaEnvironment:
        required: true
        type: string
      environmentHash:
        required: true
        type: string
      stackName:
        required: true
        type: string
      webappName:
        required: true
        type: string
      apiFunctionName:
        required: true
        type: string
      dataflowsFunctionName:
        required: true
        type: string
      azResourceGrpAppEncrypted:
        required: true
        type: string

jobs:
  deploy-webapp:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@main

      - name: Download artifact from build job
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ inputs.webappName }}-build

      - uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Deploy to Azure WebApp
        id: deploy-webapp-step
        run: |
          ./ops/scripts/pipeline/az-app-deploy.sh \
          --src ./${{ inputs.webappName }}.zip \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.webappName }}

  deploy-api:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@main

      - name: Download artifact from build job
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ inputs.apiFunctionName }}-build

      - uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Deploy Azure Functions API
        id: deploy-backend-api-step
        run: |
          sleep 30 &&
          ./ops/scripts/pipeline/az-func-deploy.sh \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.apiFunctionName }} \
          --src ./${{ inputs.apiFunctionName }}.zip

  deploy-dataflows-app:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@main

      - name: Download artifact from build job
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ inputs.dataflowsFunctionName }}-build

      - uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Deploy Data Flows Azure Function App
        id: deploy-dataflows-app-step
        run: |
          sleep 30 &&
          ./ops/scripts/pipeline/az-func-deploy.sh \
          -g ${{ steps.rgApp.outputs.out }} \
          -n ${{ inputs.dataflowsFunctionName }} \
          --src ./${{ inputs.dataflowsFunctionName }}.zip

  endpoint-test-application: # TODO: healthcheck/endpoint test on new dataflows function app?
    needs: [deploy-webapp, deploy-api, deploy-dataflows-app]
    uses: ./.github/workflows/reusable-endpoint-test.yml
    with:
      stackName: ${{ inputs.stackName }}
      webappName: ${{ inputs.webappName }}
      apiFunctionName: ${{ inputs.apiFunctionName }}
      branchHashId: ${{ inputs.environmentHash }}
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      slotName: 'initial'
    secrets: inherit # pragma: allowlist secret

  enable-access:
    runs-on: ubuntu-latest
    needs: [endpoint-test-application]
    environment: ${{ inputs.ghaEnvironment }}
    env:
      webappName: ${{ inputs.webappName }}
      apiFunctionName: ${{ inputs.apiFunctionName }}
    steps:
      - uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - name: Enable production slot access
        run: |
          az webapp config access-restriction add --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.webappName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0 --priority 100 1>/dev/null || true
          az functionapp config access-restriction add --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.apiFunctionName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0 --priority 100 1>/dev/null || true
