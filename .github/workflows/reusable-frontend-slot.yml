name: Azure Deployment - Frontend Slot Resource Creation

on:
  workflow_call:
    inputs:
      webAppName:
        required: true
        type: string
      apiFunctionName:
        required: true
        type: string
      ghaEnvironment:
        required: true
        type: string
      azResourceGrpAppEncrypted:
        required: true
        type: string
      azResourceGrpNetworkEncrypted:
        required: true
        type: string
      slotName:
        required: true
        type: string
      containerImage:
        required: true
        type: string
jobs:
  deploy-frontend-slot-resources:
    runs-on: ubuntu-latest
    container: ${{ inputs.containerImage }}
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgNetwork
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpNetworkEncrypted  }}
      - name: Create Webapp Slot Resource
        run: |
          webAppSubnetName="snet-${{ inputs.webAppName }}"

          ./ops/scripts/pipeline/slots/az-slot-web-resource-deploy.sh \
              --resourceGroup ${{ steps.rgApp.outputs.out }} \
              --webappName ${{ inputs.webappName }} \
              --apiFunctionName ${{ inputs.apiFunctionName }} \
              --slotName ${{ inputs.slotName }} \
              --subscription ${{ secrets.AZURE_SUBSCRIPTION }} \
              --network-rg ${{ steps.rgNetwork.outputs.out }} \
              --vnet ${{ vars.AZ_NETWORK_VNET_NAME }} \
              --subnet $webAppSubnetName
