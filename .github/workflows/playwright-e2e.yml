name: Playwright E2E Tests

concurrency: ${{ github.ref }}-${{ github.workflow }}

on:
  workflow_dispatch:
    inputs:
      runSlotTests:
        description: "Run Tests on Deployment Slot? True runs on staging slot false runs on production"
        required: true
        default: "true"
        type: choice
        options:
          - "true"
          - "false"
jobs:
  setup:
    name: Setup
    uses: ./.github/workflows/reusable-build-info.yml
    secrets: inherit # pragma: allowlist secret
    with:
      environment: ${{ endsWith(github.ref,'refs/heads/main') && 'Main-Gov' || 'Develop' }}
      enableSlotDeployment: ${{ inputs.runSlotTests }}
      enableBicepDeployment: "true"
      deployVnet: "false"

  deploy-db:
    if: ${{ inputs.runSlotTests == 'true' }}
    name: ComosDb
    uses: ./.github/workflows/reusable-database-deploy.yml
    needs: [setup]
    with:
      ghaEnvironment: ${{ endsWith(github.ref,'refs/heads/main') && 'Main-Gov' || 'Develop' }}
      azResourceGrpNetworkEncrypted: ${{ needs.setup.outputs.azResourceGrpNetworkEncrypted }}
      environmentHash: ${{ needs.setup.outputs.environmentHash }}
      apiName: ${{ needs.setup.outputs.apiName }}
    secrets: inherit # pragma: allowlist secret

  enable-access:
    runs-on: ubuntu-latest
    needs: [setup]
    environment: ${{ endsWith(github.ref,'refs/heads/main') && 'Main-Gov' || 'Develop' }}
    env:
      webappName: ${{ needs.setup.outputs.webappName }}
      apiName: ${{ needs.setup.outputs.apiName }}
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ needs.setup.outputs.azResourceGrpAppEncrypted }}
      - name: Enable production slot access
        if: ${{ inputs.runSlotTests == 'false' }}
        run: |
          az webapp config access-restriction add --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.webappName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0 --priority 100 1>/dev/null || true
          az functionapp config access-restriction add --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.apiName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0 --priority 100 1>/dev/null || true
      - name: Enable staging slot access
        if: ${{ inputs.runSlotTests == 'true' }}
        run: |
          az webapp config access-restriction add --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.webappName }} --slot ${{ needs.setup.outputs.slotName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0 --priority 100 1>/dev/null || true
          az functionapp config access-restriction add --resource-group ${{ steps.rgApp.outputs.out }} --name ${{ env.apiName }} --slot ${{ needs.setup.outputs.slotName }} --rule-name AllowAll --action Allow --ip-address 0.0.0.0/0 --priority 100 1>/dev/null || true

  execute-e2e-tests:
    needs: [setup]
    uses: ./.github/workflows/reusable-e2e.yml
    with:
      apiName: ${{ needs.setup.outputs.apiName }}
      slotName: ${{ needs.setup.outputs.slotName }}
      webappName: ${{ needs.setup.outputs.webappName }}
      stackName: ${{ needs.setup.outputs.stackName }}
      azResourceGrpAppEncrypted: ${{ needs.setup.outputs.azResourceGrpAppEncrypted }}
      ghaEnvironment: ${{ endsWith(github.ref,'refs/heads/main') && 'Main-Gov' || 'Develop' }}
      branchHashId: ${{ needs.setup.outputs.environmentHash }}
    secrets: inherit # pragma: allowlist secret
