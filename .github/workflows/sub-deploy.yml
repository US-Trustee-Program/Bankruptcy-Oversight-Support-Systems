name: Provision and Configure Cloud Resources

on:
  workflow_call:
    inputs:
      ghaEnvironment:
        required: true
        type: string
      azResourceGrpAppEncrypted:
        required: true
        type: string
      azResourceGrpNetworkEncrypted:
        required: true
        type: string
      stackName:
        required: true
        type: string
      apiFunctionName:
        required: true
        type: string
      dataflowsFunctionName:
        required: true
        type: string
      webappName:
        required: true
        type: string
      environmentHash:
        required: true
        type: string
      deployVnet:
        required: true
        type: string
      slotName:
        required: true
        type: string
      deployBranch:
        required: true
        type: string
      deployBicep:
        required: true
        type: string
    outputs:
      e2eCosmosDbExists:
        description: "Does E2E Cosmos DB Already Exists before deployment"
        value: ${{ jobs.deploy-db.outputs.e2eCosmosDbExists }}

jobs:
  deploy-infra:
    name: Azure Infrastructure
    uses: ./.github/workflows/reusable-deploy.yml
    if:
      ((github.ref == 'refs/heads/main') || (inputs.deployBranch == 'true')) && ${{
      inputs.deployBicep == 'true' }}
    with:
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      azResourceGrpNetworkEncrypted: ${{ inputs.azResourceGrpNetworkEncrypted }}
      stackName: ${{ inputs.stackName }}
      environmentHash: ${{ inputs.environmentHash }}
      deployVnet: ${{ inputs.deployVnet }}
      deployBranch: ${{ inputs.deployBranch }}
      deployBicep: ${{ inputs.deployBicep }}
    secrets: inherit # pragma: allowlist secret

  build-frontend-deployment-artifact:
    needs: [deploy-infra]
    name: Build Frontend for deployment
    uses: ./.github/workflows/reusable-build-frontend.yml
    secrets: inherit # pragma: allowlist secret
    with:
      nodeVersion: ${{ vars.NODE_VERSION }}
      camsServerHostname: ${{ inputs.apiFunctionName }}.azurewebsites.us
      camsServerPort: ${{ vars.CAMS_SERVER_PORT }}
      camsServerProtocol: ${{ vars.CAMS_SERVER_PROTOCOL }}
      camsBasePath: ${{ vars.CAMS_BASE_PATH }}
      webappName: ${{ inputs.webappName }}
      environment: ${{ inputs.ghaEnvironment }}
      launchDarklyEnvironment: ${{ vars.CAMS_LAUNCH_DARKLY_ENV }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      isDeployment: true

  deploy-db:
    name: ComosDb
    uses: ./.github/workflows/reusable-database-deploy.yml
    needs: [deploy-infra]
    if: ((github.ref == 'refs/heads/main') || (inputs.deployBranch == 'true'))
    with:
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      azResourceGrpNetworkEncrypted: ${{ inputs.azResourceGrpNetworkEncrypted }}
      environmentHash: ${{ inputs.environmentHash }}
      apiFunctionName: ${{ inputs.apiFunctionName }}
      dataflowsFunctionName: ${{ inputs.dataflowsFunctionName }}
    secrets: inherit # pragma: allowlist secret

  deploy-slot-resources:
    name: Slot Resources
    uses: ./.github/workflows/sub-deploy-slot-resources.yml
    needs: [deploy-infra]
    if: ((github.ref == 'refs/heads/main') || (inputs.deployBranch == 'true'))
    with:
      webappName: ${{ inputs.webappName }}
      apiFunctionName: ${{ inputs.apiFunctionName }}
      dataflowsFunctionName: ${{ inputs.dataflowsFunctionName }}
      ghaEnvironment: ${{ inputs.ghaEnvironment }}
      azResourceGrpAppEncrypted: ${{ inputs.azResourceGrpAppEncrypted }}
      azResourceGrpNetworkEncrypted: ${{ inputs.azResourceGrpNetworkEncrypted }}
      slotName: ${{ inputs.slotName }}
      environmentHash: ${{ inputs.environmentHash }}
    secrets: inherit # pragma: allowlist secret
