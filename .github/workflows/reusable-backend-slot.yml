name: Azure Deployment - Backend Slot Creation

on:
  workflow_call:
    inputs:
      webappName:
        required: true
        type: string
      apiFunctionName:
        required: true
        type: string
      dataflowsFunctionName:
        required: true
        type: string
      ghaEnvironment:
        required: true
        type: string
      azResourceGrpAppEncrypted:
        required: true
        type: string
      azResourceGrpNetworkEncrypted:
        required: true
        type: string
      slotName:
        required: true
        type: string
      environmentHash:
        required: true
        type: string

jobs:
  deploy-backend-slot-resources:
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}/azure-cli-runner:azure-cli-2.71.0
    environment: ${{ inputs.ghaEnvironment }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ vars.AZURE_ENVIRONMENT }}
      - uses: cloudposse/github-action-secret-outputs@main
        id: rgApp
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpAppEncrypted }}

      - uses: cloudposse/github-action-secret-outputs@main
        id: rgNetwork
        with:
          secret: ${{ secrets.PGP_SIGNING_PASSPHRASE }}
          op: decode
          in: ${{ inputs.azResourceGrpNetworkEncrypted  }}

      - name: Create API Slot Resource
        run: |
          dataflowsSlotStorageAccountName=ustpslot${{ inputs.environmentHash }}
          apiSlotStorageAccountName=dataflowsslot${{ inputs.environmentHash }}

          ./ops/scripts/pipeline/slots/az-slot-api-resource-deploy.sh \
              --resourceGroup ${{ steps.rgApp.outputs.out }} \
              --idResourceGroup ${{ secrets.AZURE_RG }} \
              --apiFunctionName ${{ inputs.apiFunctionName }} \
              --dataflowsFunctionName ${{ inputs.dataflowsFunctionName }} \
              --webappName ${{ inputs.webappName }} \
              --slotName ${{ inputs.slotName }} \
              --kvIdName ${{ secrets.AZ_KV_APP_CONFIG_MANAGED_ID }} \
              --sqlIdName ${{ secrets.AZ_SQL_IDENTITY_NAME }} \
              --apiStorageAccName ${apiSlotStorageAccountName:0:24} \
              --dataflowsStorageAccName ${dataflowsSlotStorageAccountName:0:24} \
              --databaseName ${{ secrets.AZ_COSMOS_DATABASE_NAME }} \
              --infoSha ${{ inputs.environmentHash || 'DOES_NOT_EXIST' }}
